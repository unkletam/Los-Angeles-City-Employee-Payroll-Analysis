theme_hc() +
labs(colour="Concentration Group", subtitle = paste("Fig 3B | p-value = ",round(t.test2$p.value, 4))) +
ggtitle("Longevity Bonus for Population Vs. Recreation And Parks Department Employees") +
xlab("") +
ylab("Mean Longevity Bonus") +
theme(plot.subtitle=element_text(size=9, hjust=0, face="italic", color="black")) +
scale_color_manual(values=c("purple","#E8A9FF","#8E7FFF"))
library(tidyverse)
library(tidyr)
library(dplyr)
library(stringr)
require(data.table)
library(ggplot2)
library(reshape2)
library(corrplot)
library(magrittr)
library(treemapify)
library(treemap)
library(plotly)
library(ggfittext)
library(GGally)
library(ggthemes)
library(ggrepel)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
knitr::opts_chunk$set(fig.width = 10, fig.height = 5)
#Population and their mean, std
p <- subset(df,df$Year=='2014' )
pop_mean <- mean(p$Longevity.Bonus.Pay)
pop_std <- sd(p$Longevity.Bonus.Pay)
#Sample and their mean, std
dataset <- subset(df,df$Department.Title=="Recreation And Parks" & df$Year=='2014' )
sample = sample(1:nrow(dataset), size=120)
longevity_s <- dataset[sample,]
sample_mean <- mean(longevity_s$Longevity.Bonus.Pay)
sample_std <- sd(longevity_s$Longevity.Bonus.Pay)
# t-distribution
t_dataset <- ((sample_mean-pop_mean)*sqrt(120))/sample_std
#Function of t-test
t.test2 <- t.test(longevity_s$Longevity.Bonus.Pay, mu=pop_mean, alt="greater", conf=0.95)
data_t <- data.frame(group = c("Population", "Recreation And Parks"),
mean = c(pop_mean, sample_mean),
sd = c(pop_std, sample_std))
ggplot(data_t,aes(x=group, color=group)) +
geom_boxplot(aes(lower=mean-sd,
upper=mean+sd,
middle=mean,
ymin=mean-3*sd,
ymax=mean+3*sd),
stat="identity")+
theme_hc() +
labs(colour="Concentration Group", subtitle = paste("Fig 3B | p-value = ",round(t.test2$p.value, 4))) +
ggtitle("Longevity Bonus for Population Vs. Recreation And Parks Department Employees") +
xlab("") +
ylab("Mean Longevity Bonus") +
theme(plot.subtitle=element_text(size=9, hjust=0, face="italic", color="black")) +
scale_color_manual(values=c("purple","#E8A9FF","#8E7FFF"))
setwd("C:/Classwork/IE 6600/Hackathon")
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(stringr)
require(gridExtra)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
#Cleaning
df_new$Department.Title <- gsub("Recreation and Parks", "Recreation And Parks", df_new$Department.Title)
#checking if cleaning worked
df_new[(df_new$Department.Title=='Recreation and Parks'),]
#filling na values of hourly rate
df_new %>%
group_by(Department.Title) %>%
mutate(Hourly.or.Event.Rate = ifelse(is.na(Hourly.or.Event.Rate), mean(Hourly.or.Event.Rate, na.rm = TRUE), Hourly.or.Event.Rate)) %>%
ungroup() -> la_payroll_with_mean_dept
df_new %>%
group_by(Job.Class.Title) %>%
mutate(Hourly.or.Event.Rate = ifelse(is.na(Hourly.or.Event.Rate), mean(Hourly.or.Event.Rate, na.rm = TRUE), Hourly.or.Event.Rate)) %>%
ungroup() -> la_payroll_with_mean_jobs
#checking if filling worked
la_payroll_with_mean_jobs <- la_payroll_with_mean_jobs[!is.na(la_payroll_with_mean_jobs$Hourly.or.Event.Rate), ]
#taking min and max hourly pay values by employment type
la_payroll_with_mean_jobs %>% group_by(Employment.Type) %>% summarize(total_min=min(Hourly.or.Event.Rate),total_max=max(Hourly.or.Event.Rate))
#taking min max total.payments value for each employment type
la_payroll_with_mean_jobs %>% group_by(Employment.Type) %>% summarize(total_min=min(Total.Payments),total_max=max(Total.Payments))
#just getting number of jobs per department having part time availabilities and full time availabilities
dept_type <- df_new %>% group_by(Department.Title,Employment.Type) %>% summarize(x=mean(n())) %>% arrange((Department.Title),desc(x))
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
#top 10 part time numbers
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
#top 10 full time numbers
ft_top10 <- new_df %>% arrange(desc(`Full Time`))
ft_top10 <- head(ft_top10,10)
custom_colors <- c("#926efa","#8c65e6","#855dd2","#7e54bf","#764dac","#6d459a","#643e89","#5b3778","#513068","#472a58")
#setting Y lim
ylim_min <- 0
ylim_max_part_time <- max(pt_top10$`Part Time`)
ylim_max_full_time <- max(ft_top10$`Full Time`)
part_time_plot <-
ggplot(pt_top10, aes(x =str_wrap(reorder(Department.Title,-`Part Time`),width=3), y = `Part Time`)) +
geom_bar(stat = "identity", fill = custom_colors) +
ylim(ylim_min, ylim_max_full_time) +
labs(title = "Part-time Employment by Department and Title",
x = " ", y = "Part-time Opportunities") +
theme_hc()
full_time_plot <-
ggplot(ft_top10, aes(x =str_wrap(reorder(Department.Title,-`Full Time`),width=10), y = `Full Time`)) +
geom_bar(stat = "identity", fill = custom_colors) +
ylim(ylim_min, ylim_max_full_time) +
labs(title = "Full-time Employee Counts by Department",
x=" ",
y = "Full-time Opportunities") +
theme_hc()
#arranging together
grid.arrange(part_time_plot, full_time_plot ,nrow=2)
cols=c("Recreation And Parks","City Clerk", "Los Angeles Convention Center" )
top_2_pt_dept <- df_new %>%
filter(Department.Title %in% cols)
top_2_pt_dept=top_2_pt_dept%>% group_by(Department.Title,Employment.Type) %>% summarise(totals=mean(Total.Payments))
top_2 <- pivot_wider(top_2_pt_dept, names_from = Employment.Type, values_from = totals)
top_2_df <- top_2 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
top_2_df_order <- top_2_df[order(top_2_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
top_2_df_long <- top_2_df_order %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
part_time_values_totals<-ggplot(top_2_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width = 10), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Investment by Department")+
scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))
part_time_df_long_subset <- part_time_df_long %>%
filter(Department.Title %in% cols)
library(tidyr)
#Section 3: Understanding the Full Time and Part Time dynamics in Departments
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(stringr)
require(gridExtra)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
# Q1 : What are the average number of jobs available in part time full time and per event?
#filtering vals greater than 0
df_new = df[df$Total.Payments>=0,]
#Cleaning
df_new$Department.Title <- gsub("Recreation and Parks", "Recreation And Parks", df_new$Department.Title)
#checking if cleaning worked
df_new[(df_new$Department.Title=='Recreation and Parks'),]
#filling na values of hourly rate
df_new %>%
group_by(Department.Title) %>%
mutate(Hourly.or.Event.Rate = ifelse(is.na(Hourly.or.Event.Rate), mean(Hourly.or.Event.Rate, na.rm = TRUE), Hourly.or.Event.Rate)) %>%
ungroup() -> la_payroll_with_mean_dept
df_new %>%
group_by(Job.Class.Title) %>%
mutate(Hourly.or.Event.Rate = ifelse(is.na(Hourly.or.Event.Rate), mean(Hourly.or.Event.Rate, na.rm = TRUE), Hourly.or.Event.Rate)) %>%
ungroup() -> la_payroll_with_mean_jobs
#checking if filling worked
la_payroll_with_mean_jobs <- la_payroll_with_mean_jobs[!is.na(la_payroll_with_mean_jobs$Hourly.or.Event.Rate), ]
#taking min and max hourly pay values by employment type
la_payroll_with_mean_jobs %>% group_by(Employment.Type) %>% summarize(total_min=min(Hourly.or.Event.Rate),total_max=max(Hourly.or.Event.Rate))
#taking min max total.payments value for each employment type
la_payroll_with_mean_jobs %>% group_by(Employment.Type) %>% summarize(total_min=min(Total.Payments),total_max=max(Total.Payments))
#just getting number of jobs per department having part time availabilities and full time availabilities
dept_type <- df_new %>% group_by(Department.Title,Employment.Type) %>% summarize(x=mean(n())) %>% arrange((Department.Title),desc(x))
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
#top 10 part time numbers
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
#top 10 full time numbers
ft_top10 <- new_df %>% arrange(desc(`Full Time`))
ft_top10 <- head(ft_top10,10)
custom_colors <- c("#926efa","#8c65e6","#855dd2","#7e54bf","#764dac","#6d459a","#643e89","#5b3778","#513068","#472a58")
#setting Y lim
ylim_min <- 0
ylim_max_part_time <- max(pt_top10$`Part Time`)
ylim_max_full_time <- max(ft_top10$`Full Time`)
# Create separate bar graphs for part-time and full-time counts
part_time_plot <-
ggplot(pt_top10, aes(x =str_wrap(reorder(Department.Title,-`Part Time`),width=3), y = `Part Time`)) +
geom_bar(stat = "identity", fill = custom_colors) +
ylim(ylim_min, ylim_max_full_time) +
labs(title = "Part-time Employment by Department and Title",
x = " ", y = "Part-time Opportunities") +
theme_hc()
full_time_plot <-
ggplot(ft_top10, aes(x =str_wrap(reorder(Department.Title,-`Full Time`),width=10), y = `Full Time`)) +
geom_bar(stat = "identity", fill = custom_colors) +
ylim(ylim_min, ylim_max_full_time) +
labs(title = "Full-time Employee Counts by Department",
x=" ",
y = "Full-time Opportunities") +
theme_hc()
#arranging together
grid.arrange(part_time_plot, full_time_plot ,nrow=2)
#Insights for Q1:
#The parks and rec department has the highest number of part time opportunities.
# But has very few full time oportunities indicating that majority of their work nature requires only part time assistance
#The police, water, and fire departments may require more full-time workers to ensure 24/7 coverage and quick response times
## Question 2: What percent of the employment is part time in the top 10 part time offering departments?
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
part_time_values<-ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Part-time and Full-time Availability by Department") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
part_time_values
#Insights:
# Although Recreations and Parks looked like it dominated the part time availabilities, we see here that
# City Clerk, Los Angeles Convention Center are also at par with Recreation and Parks, having over 75%
#opportunities as "part time"
## Question 3: Diving Deep into Departments with top part time opportunities
#columns with highest part time
cols=c("Recreation And Parks","City Clerk", "Los Angeles Convention Center" )
top_2_pt_dept <- df_new %>%
filter(Department.Title %in% cols)
top_2_pt_dept=top_2_pt_dept%>% group_by(Department.Title,Employment.Type) %>% summarise(totals=mean(Total.Payments))
top_2 <- pivot_wider(top_2_pt_dept, names_from = Employment.Type, values_from = totals)
top_2_df <- top_2 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
top_2_df_order <- top_2_df[order(top_2_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
top_2_df_long <- top_2_df_order %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
part_time_values_totals<-ggplot(top_2_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width = 10), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Investment by Department")+
scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))
part_time_df_long_subset <- part_time_df_long %>%
filter(Department.Title %in% cols)
part_time_values_count<-ggplot(part_time_df_long_subset, aes(x =str_wrap(reorder(Department.Title,-pct),width = 10), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = " ", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Availability by Department")+
scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))
grid.arrange(part_time_values_totals, part_time_values_count, ncol=2)
# we can infer that the convention center, city clerk, and parks and recreation departments have a large number of jobs, but the majority of these jobs are lower-paying positions.
# This can be deduced from the fact that these departments collectively spend only around 15% of their budget on salaries and wages for their employees, despite employing more than three-quarters of the total number of employees in these departments.
#
# This information suggests that these departments may be more focused on providing essential public services and maintaining public facilities rather than generating revenue or creating high-paying jobs.
# It may also indicate that these departments have a larger number of entry-level or mid-level positions, as opposed to higher-level or managerial positions that typically command higher salaries.
# These departments can further lower their budget by hiring volunteers to reduce the part-time workers hiring
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
part_time_values<-ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Part-time and Full-time Availability by Department") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
part_time_values
grid.arrange(part_time_values_totals, part_time_values_count, ncol=2)
grid.arrange(part_time_plot, full_time_plot ,nrow=2)
part_time_values<-ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Part-time and Full-time Availability by Department") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
part_time_values
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
part_time_values<-ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Part-time and Full-time Availability by Department") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
part_time_values
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Part-time and Full-time Availability by Department") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
options(dplyr.summarise.inform = FALSE)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Part-time and Full-time Availability by Department") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
options(dplyr.summarise.inform = FALSE)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors, subtitle = "Fig 1E") +
xlab("")+
ylab("Percent Shared")
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("PART TIME VS FULL TIME ROLE AVAILABILITY") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
options(dplyr.summarise.inform = FALSE)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors, subtitle = "Fig 1E") +
xlab("")+
ylab("Percent Shared") +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("PART TIME VS FULL TIME ROLE AVAILABILITY") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()
options(dplyr.summarise.inform = FALSE)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors, subtitle = "Fig 1E") +
xlab("")+
ylab("Percent Shared") +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("PART TIME VS FULL TIME ROLE AVAILABILITY") +  scale_fill_manual(values = c("#7e54bf","#472a58"),
name = "Employment Type",
labels = c("Part-time", "Full-time"))+theme_hc()+
theme(plot.subtitle=element_text(size=9, hjust= 0, face="italic", color="black"))
colnames_tree <- c("Department.Title","Job.Class.Title","Total.Payments")
df_tree <- df[colnames_tree]
df_tree$Department.Title <- gsub("\\s*\\(.*\\)", "", df_tree$Department.Title)
df_tree <- aggregate(df_tree$Total.Payments, by=list(df_tree$Department.Title), FUN=mean)
colnames(df_tree)[1] = "department_title"
colnames(df_tree)[2] = "avg_earning"
df_tree <- df_tree[order(-df_tree$avg_earning),] # Sort the data in descending order by value
ggplot(df_tree, aes(area = avg_earning,
fill = avg_earning,
label = department_title)) +
geom_treemap() +
geom_treemap_text( place = "centre", reflow = TRUE,
size = 11, grow = FALSE, color = "white") +
scale_fill_gradient(high = "#926efa", low = "#472a58", na.value = NA, space = "Lab") +
ggtitle("VOLUME OF AVERAGE PAYOUT BY CITY DEPARTMENT (IN USD)") +
labs(fill = "Average Payout \n(In USD)", subtitle = "Fig 1A") +
theme(plot.subtitle=element_text(size=9, hjust=0, face="italic", color="black")) + theme_hc()+
theme(legend.position = "bottom", legend.key.width = unit(2.8, "cm"))
options(dplyr.summarise.inform = FALSE)
df <- read.csv("City_Employee_Payroll__2013-2018_.csv")
df$Department.Title <- gsub("\\s*\\(.*\\)", "", df$Department.Title)
df_new = df[df$Total.Payments>=0,]
a=df_new %>% group_by(Year,Department.Title,Employment.Type) %>% summarize(x=n())
dept_type=a %>% group_by(Department.Title,Employment.Type) %>% summarize(x=ceiling(mean(x)))
#widening for graph
new_df <- pivot_wider(dept_type, names_from = Employment.Type, values_from = x)
df_new = df[df$Total.Payments>=0,]
pt_top10 <- new_df %>% arrange(desc(`Part Time`))
pt_top10 <- head(pt_top10,10)
part_time_df <- pt_top10 %>%
mutate(total_count = `Part Time` +  `Full Time`,
part_time_pct = `Part Time` / total_count,
full_time_pct = `Full Time` / total_count)
part_time_df <- part_time_df[order(part_time_df$part_time_pct, decreasing = TRUE),]
# convert dataframe from wide to long format for ggplot2
part_time_df_long <- part_time_df %>%
pivot_longer(cols = c("part_time_pct", "full_time_pct"), names_to = "employment_type", values_to = "pct")
# create stacked bar chart using ggplot2
ggplot(part_time_df_long, aes(x = str_wrap(reorder(Department.Title,-pct),width=5), y = pct, fill = employment_type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Department", y = "Percentage", fill = custom_colors, subtitle = "Fig 1E") +
xlab("")+
ylab("Percent Shared") +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("PART TIME VS FULL TIME ROLE AVAILABILITY") +
scale_fill_manual(values = c("#7e54bf","#472a58"), name = "Employment Type", labels = c("Part-time", "Full-time"))+
theme_hc()+
theme(plot.subtitle=element_text(size=9, hjust= 0, face="italic", color="black"))
